<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1337972903000</longProp>
        <longProp name="ThreadGroup.end_time">1337972903000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Dummy Request Response" enabled="true">
          <stringProp name="BeanShellSampler.query">String dummyJSON=&quot;[{&apos;equipmentPart&apos;:{&apos;allAttributes&apos;:{&apos;compositePartName&apos;:&apos;SRW224G4P-K9-AU&apos;,&apos;equipmentPartPhysicalSiteId&apos;:&apos;73411&apos;,&apos;equipmentPartSiteId&apos;:73414,&apos;equipmentPartId&apos;:542024,&apos;productPartName&apos;:&apos;SRW224G4P-K9-AU&apos;,&apos;equipmentPartName&apos;:&apos;SRW224G4P-K9-AU&apos;}},&apos;updatedTimeStamp&apos;:1337838775000,&apos;solutionEntityId&apos;:542227,&apos;solutionId&apos;:13959179,&apos;status&apos;:&apos;validationok&apos;,&apos;id&apos;:95509,&apos;createdTimeStamp&apos;:1337838666000,&apos;messages&apos;:&apos;, NonConfigurable&apos;},{&apos;equipmentPart&apos;:{&apos;allAttributes&apos;:{&apos;compositePartName&apos;:&apos;UC560-T1E1-K9&apos;,&apos;equipmentPartPhysicalSiteId&apos;:&apos;73411&apos;,&apos;equipmentPartSiteId&apos;:73412,&apos;equipmentPartId&apos;:542027,&apos;productPartName&apos;:&apos;UC560-T1E1-K9&apos;,&apos;equipmentPartName&apos;:&apos;UC560-T1E1-K9&apos;}},&apos;updatedTimeStamp&apos;:1337838775000,&apos;solutionEntityId&apos;:542230,&apos;solutionId&apos;:13959179,&apos;status&apos;:&apos;validationok&apos;,&apos;id&apos;:95510,&apos;createdTimeStamp&apos;:1337838666000,&apos;messages&apos;:&apos;, NonConfigurable&apos;}]&quot;;

SampleResult.setResponseData(dummyJSON);</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="get the JSON object" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import org.json.JSONArray;
import org.json.JSONObject;

String jsonString = prev.getResponseDataAsString();
JSONArray equipmentParts = new JSONArray(jsonString);
print(&quot;parsed json&quot;);
JSONArray parts = new JSONArray();

for(int i=0;i&lt;equipmentParts.length();i++ ){
	JSONObject equipmentPart = equipmentParts.getJSONObject(i).getJSONObject(&quot;equipmentPart&quot;);
	print(equipmentPart.toString());
	JSONObject allAttributes = equipmentPart.getJSONObject(&quot;allAttributes&quot;);
	print(allAttributes.toString());
	JSONObject part = new JSONObject();
	print(allAttributes.getLong(&quot;equipmentPartId&quot;));
	part.put(&quot;partId&quot;,allAttributes.getLong(&quot;equipmentPartId&quot;));
	print(allAttributes.getString(&quot;compositePartName&quot;));
	part.put(&quot;partNumber&quot;,allAttributes.getString(&quot;compositePartName&quot;));
	// add more here
	parts.put(part);
}

vars.put(&quot;jsonResponse&quot;, parts.toString());</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" testname="Dummy PostRequest" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${jsonResponse}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">jakarta.apache.org</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/jmeter/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.FILE_NAME"></stringProp>
          <stringProp name="HTTPSampler.FILE_FIELD"></stringProp>
          <stringProp name="HTTPSampler.mimetype"></stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
