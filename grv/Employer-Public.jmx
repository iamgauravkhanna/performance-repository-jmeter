<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
<hashTree>
<TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
<stringProp name="TestPlan.comments"></stringProp>
<boolProp name="TestPlan.functional_mode">false</boolProp>
<boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
<elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
<collectionProp name="Arguments.arguments" />
</elementProp>
<stringProp name="TestPlan.user_define_classpath"></stringProp>
</TestPlan>
<hashTree>
<ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
<elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
<boolProp name="LoopController.continue_forever">false</boolProp>
<stringProp name="LoopController.loops">1</stringProp>
</elementProp>
<stringProp name="ThreadGroup.num_threads">1</stringProp>
<stringProp name="ThreadGroup.ramp_time">1</stringProp>
<longProp name="ThreadGroup.start_time">1281132211000</longProp>
<longProp name="ThreadGroup.end_time">1281132211000</longProp>
<boolProp name="ThreadGroup.scheduler">false</boolProp>
<stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
<stringProp name="ThreadGroup.duration"></stringProp>
<stringProp name="ThreadGroup.delay"></stringProp>
</ThreadGroup>
<hashTree>
<CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
<collectionProp name="CookieManager.cookies" />
<boolProp name="CookieManager.clearEachIteration">false</boolProp>
<stringProp name="CookieManager.policy">rfc2109</stringProp>
</CookieManager>
<hashTree />
<Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
<collectionProp name="Arguments.arguments">
<elementProp name="VIEWSTATE" elementType="Argument">
<stringProp name="Argument.name">VIEWSTATE</stringProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
</elementProp>
<elementProp name="jsessionid" elementType="Argument">
<stringProp name="Argument.name">jsessionid</stringProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
</elementProp>
</collectionProp>
</Arguments>
<hashTree />
<HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
<collectionProp name="HeaderManager.headers">
<elementProp name="" elementType="Header">
<stringProp xml:space="preserve" name="Header.name">User-Agent</stringProp>
<stringProp xml:space="preserve" name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; InfoPath.2)</stringProp>
</elementProp>
<elementProp name="" elementType="Header">
<stringProp xml:space="preserve" name="Header.name">Accept</stringProp>
<stringProp xml:space="preserve" name="Header.value">image/jpeg, application/x-ms-application, image/gif, application/xaml+xml, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
</elementProp>
<elementProp name="" elementType="Header">
<stringProp xml:space="preserve" name="Header.name">Accept-Language</stringProp>
<stringProp xml:space="preserve" name="Header.value">en-US</stringProp>
</elementProp>
</collectionProp>
</HeaderManager>
<hashTree />
<LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Step 1" enabled="true">
<boolProp name="LoopController.continue_forever">false</boolProp>
<stringProp name="LoopController.loops">1</stringProp>
</LoopController>
<hashTree>
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/register/registration">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/register/registration<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/register/registration</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/register/registerEmployer">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/register/registerEmployer<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="firstName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">firstName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="lastName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Khanna</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">lastName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="email">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">iamgauravkhanna@gmail.com</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">email</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="password">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav123</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">password</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="confirmPassword">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav123</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">confirmPassword</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="securityquestion">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">In which city you were born?</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">securityquestion</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="answer">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Doggy</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">answer</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="legalCompanyName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">hCentive</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">legalCompanyName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="companyName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Testing</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">companyName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="yearOfIncorporation">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">2001</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">yearOfIncorporation</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="taxId">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">12-2121221</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">taxId</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sicCode">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1211</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sicCode</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sicDescription">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">12121</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sicDescription</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="businessType">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Private Limited</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">businessType</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="fullTimeEmployees">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">101</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">fullTimeEmployees</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="fullTimeEmployeesSinceLastYear">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">100</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">fullTimeEmployeesSinceLastYear</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="address1">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">New York</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">address1</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="address2">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">address2</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="city">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Virginia</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">city</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="state">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">VA</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">state</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="zipCode2">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">20190</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">zipCode2</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="county">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">FAIRFAX</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">county</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="phone">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">(898) 121-2989</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">phone</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name"></stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/register/registerEmployer</stringProp>
<stringProp name="HTTPSampler.method">POST</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/register/registerEmployer">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/register/registerEmployer<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="firstName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">firstName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="lastName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Khanna</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">lastName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="email">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">iamgauravkhanna1@gmail.com</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">email</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="password">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav123</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">password</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="confirmPassword">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav123</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">confirmPassword</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="securityquestion">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">What is Pets name?</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">securityquestion</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="answer">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Doggy</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">answer</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="legalCompanyName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">hCentive</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">legalCompanyName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="companyName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Testing</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">companyName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="yearOfIncorporation">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">2001</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">yearOfIncorporation</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="taxId">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">12-2121221</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">taxId</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sicCode">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1211</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sicCode</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="sicDescription">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">12121</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">sicDescription</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="businessType">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Limited Partnership</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">businessType</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="fullTimeEmployees">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">101</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">fullTimeEmployees</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="fullTimeEmployeesSinceLastYear">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">100</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">fullTimeEmployeesSinceLastYear</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="address1">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">New York</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">address1</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="address2">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">address2</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="city">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Virginia</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">city</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="state">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">VA</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">state</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="zipCode2">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">20190</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">zipCode2</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="county">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">FAIRFAX</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">county</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="phone">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">(898) 121-2989</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">phone</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name"></stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/register/registerEmployer</stringProp>
<stringProp name="HTTPSampler.method">POST</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/login">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/login<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="j_username">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">iamgauravkhanna1@gmail.com</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">j_username</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="j_password">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Gaurav123</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">j_password</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/login</stringProp>
<stringProp name="HTTPSampler.method">POST</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/enrollment/enrollmentDetail">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/enrollment/enrollmentDetail<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/enrollment/enrollmentDetail</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/employee/manageEmployee">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/employee/manageEmployee<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/employee/manageEmployee</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/employee/addEmployee">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/employee/addEmployee<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/employee/addEmployee</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/employee/addEmployee">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/employee/addEmployee<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="employee.firstName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Jim</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.firstName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.middleName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.middleName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.lastName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Brown</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.lastName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.ssn">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">689-68-6796</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.ssn</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.joiningDate">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">01/01/2011</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.joiningDate</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.dob">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">01/01/1980</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.dob</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.numberOfHours">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">9</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.numberOfHours</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.gender">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Male</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.gender</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.annualSalary">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">45000</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.annualSalary</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.tobaccoUsage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Yes</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.tobaccoUsage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.communicationMode">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Email</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.communicationMode</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.status">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Active</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.status</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.email">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">jim.brown112233@gmail.com</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.email</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.address">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">315 Iron Horse Way</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.address</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.state">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">VA</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.state</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.city">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">FAIRFAX</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.city</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.zip">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">20190</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.zip</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.id">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.id</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.phoneNumber">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.phoneNumber</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="employee.alternateEmail">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">employee.alternateEmail</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="coverageNeeded">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Employee Only</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">coverageNeeded</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.firstName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Maria</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.firstName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.middleName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.middleName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.lastName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Brown</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.lastName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.tobaccoUsage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">No</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.tobaccoUsage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.ssn">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">212-12-7841</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.ssn</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.dob">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">11/12/1987</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.dob</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="spouse.basicInfo.gender">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Female</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">spouse.basicInfo.gender</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.firstName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">John</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.firstName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.middleName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value"></stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.middleName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.lastName">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Brown</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.lastName</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.tobaccoUsage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">No</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.tobaccoUsage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.ssn">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">456-99-0876</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.ssn</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.dob">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">01/01/2000</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.dob</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="child.basicInfo.gender">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Male</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">child.basicInfo.gender</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/employee/addEmployee</stringProp>
<stringProp name="HTTPSampler.method">POST</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/enrollment/enrollmentDetail">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/enrollment/enrollmentDetail<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/enrollment/enrollmentDetail</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/enrollment/productCategoryDetail">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/enrollment/productCategoryDetail<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="effectiveDate">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">02/29/2012</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">effectiveDate</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentStartDate">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1/15/2012</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentStartDate</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentEndDate">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">2/14/2012</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentEndDate</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentSetupEligibiilty.eligibilityOption">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">ALL</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentSetupEligibiilty.eligibilityOption</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/enrollment/productCategoryDetail</stringProp>
<stringProp name="HTTPSampler.method">POST</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/enrollment/categorySelection">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/enrollment/categorySelection<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="categoryLevelList[0].levelOfCoverage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">Bronze</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">categoryLevelList[0].levelOfCoverage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_categoryLevelList[0].levelOfCoverage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">on</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_categoryLevelList[0].levelOfCoverage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_categoryLevelList[1].levelOfCoverage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">on</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_categoryLevelList[1].levelOfCoverage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_categoryLevelList[2].levelOfCoverage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">on</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_categoryLevelList[2].levelOfCoverage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_categoryLevelList[3].levelOfCoverage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">on</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_categoryLevelList[3].levelOfCoverage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_categoryLevelList[4].levelOfCoverage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">on</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_categoryLevelList[4].levelOfCoverage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentSetupCategory.contriEmployeePercentage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">50</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentSetupCategory.contriEmployeePercentage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentSetupCategory.contriEmployeeAbsolute">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">200</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentSetupCategory.contriEmployeeAbsolute</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="selectionType">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">plan</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">selectionType</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentSetupCategoryPlans[0].checkBoxId">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentSetupCategoryPlans[0].checkBoxId</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="_enrollmentSetupCategoryPlans[0].checkBoxId">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">on</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">_enrollmentSetupCategoryPlans[0].checkBoxId</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentSetupCategoryPlans[0].enrollmentSetupCategory.contriEmployeePercentage">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">50</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentSetupCategoryPlans[0].enrollmentSetupCategory.contriEmployeePercentage</stringProp>
</elementProp>
<elementProp elementType="HTTPArgument" name="enrollmentSetupCategoryPlans[0].enrollmentSetupCategory.contriEmployeeAbsolute">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">200</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">enrollmentSetupCategoryPlans[0].enrollmentSetupCategory.contriEmployeeAbsolute</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/enrollment/categorySelection</stringProp>
<stringProp name="HTTPSampler.method">POST</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/addPlan">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/addPlan<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="planId">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">1</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">planId</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/addPlan</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/addPlan">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/addPlan<collectionProp name="Arguments.arguments">
<elementProp elementType="HTTPArgument" name="planId">
<boolProp name="HTTPArgument.always_encode">true</boolProp>
<stringProp name="Argument.value">7</stringProp>
<stringProp name="Argument.metadata">=</stringProp>
<boolProp name="HTTPArgument.use_equals">true</boolProp>
<stringProp name="Argument.name">planId</stringProp>
</elementProp>
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/addPlan</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/viewCart">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/viewCart<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/viewCart</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/reviewOffer1">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/reviewOffer1<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/reviewOffer1</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/saveOffer1">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/saveOffer1<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/saveOffer1</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
<HTTPSampler guiclass="HttpTestSampleGui" testclass="HTTPSampler" enabled="true" testname="https://exqa.demo.hcentive.com/employer/signout">
<elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">https://exqa.demo.hcentive.com/employer/signout<collectionProp name="Arguments.arguments">
</collectionProp>
</elementProp>
<stringProp name="HTTPSampler.domain">exqa.demo.hcentive.com</stringProp>
<stringProp name="HTTPSampler.port">443</stringProp>
<stringProp name="HTTPSampler.protocol">https</stringProp>
<stringProp name="HTTPSampler.contentEncoding"></stringProp>
<stringProp name="HTTPSampler.path">/employer/signout</stringProp>
<stringProp name="HTTPSampler.method">GET</stringProp>
<boolProp name="HTTPSampler.follow_redirects">true</boolProp>
<boolProp name="HTTPSampler.auto_redirects">true</boolProp>
<boolProp name="HTTPSampler.use_keepalive">true</boolProp>
<boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
<stringProp name="HTTPSampler.mimetype"></stringProp>
<stringProp name="HTTPSampler.monitor">false</stringProp>
<stringProp name="HTTPSampler.embedded_url_re"></stringProp>
</HTTPSampler>
<hashTree />
</hashTree>
</hashTree>
</hashTree>
</hashTree>
</jmeterTestPlan>
